---
- group:
    name: "{{ prometheus_user }}"
    system: yes

- user:
    name: "{{ prometheus_user }}"
    group: "{{ prometheus_user }}"
    home: "{{ prometheus_deploy_dir }}"
    createhome: no

- get_url:
    url: "{{ prometheus_archive_url }}"
    dest: "{{ ansible_cache_dir }}/{{ prometheus_archive_name }}"
    sha256sum: "{{ prometheus_archive_sum[prometheus_version] }}"

- unarchive:
    src: "{{ ansible_cache_dir }}/{{ prometheus_archive_name }}"
    dest: "{{ prometheus_unarchive_dir }}/"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_user }}"
    remote_src: yes
    creates: "{{ prometheus_unarchive_creates }}"

- file:
    src: "{{ prometheus_unarchive_dir }}/prometheus-{{ prometheus_version }}.linux-amd64"
    state: link
    dest: "{{ prometheus_deploy_dir }}"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_user }}"

- template:
    src: prometheus.service.j2
    dest: /lib/systemd/system/prometheus.service
  register: prometheus_service
  tags: update-conf

- shell: >
    systemctl daemon-reload
  when: prometheus_service|changed
  notify: restart prometheus

# - copy:
#     src: "{{ playbook_dir }}/../../{{ target_name }}/kube.key"
#     dest: "{{ prometheus_unarchive_dir }}/prometheus/kube-ca.cert"
#     owner: "{{ prometheus_user }}"
#     group: "{{ prometheus_user }}"
#   when: cluster_context == 'clusters-es'

# - copy:
#     src: "{{ playbook_dir }}/../../{{ target_name }}/kube.token"
#     dest: "{{ prometheus_unarchive_dir }}/prometheus/kube-bearer.token"
#     owner: "{{ prometheus_user }}"
#     group: "{{ prometheus_user }}"
#   when: cluster_context == 'clusters-es'

- template:
    src: "prometheus-cfg-{{ cluster_context }}.yml.j2"
    dest: "{{ prometheus_deploy_dir }}/prometheus.yml"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_user }}"
  notify: restart prometheus
  tags: update-conf

- template:
    src: "prom-master.consul-service.json.j2"
    dest: "/etc/consul.d/prom-master.json"
  notify: restart consul
  when: cluster_context == 'clusters-nomad'

- service:
    name: prometheus
    state: started
    enabled: yes
