- hosts: localhost
  become: no
  gather_facts: no

  pre_tasks:
    - assert:
        that:
          - "{{ lookup('env', 'AWS_SESSION_TOKEN') != '' }}"
          - "{{ lookup('env', 'AWS_DEFAULT_REGION') != '' }}"
          - "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') != '' }}"
          - "{{ lookup('env', 'AWS_ACCESS_KEY_ID') != '' }}"
          - "{{ layer_name is defined }}"
          - "{{ target_name is defined }}"
          - "{{ target_region is defined }}"
        msg: "Missing at least an environment var"

    - set_fact:
        target_full_name: "{{ target_name }}-{{ target_region }}"

    - set_fact:
        tf_common_vars: >-
          -var-file={{ playbook_dir }}/../../terraform/{{ target_full_name }}.tfvars
          -var=target_name={{ target_name }}
          -var=target_region={{ target_region }}
  tasks:
    - pause:
        prompt: |-
          Are you sure ?
          Type 'yes' if you want to continue
      register: prompted
      when: not (auto_apply|default(false))

    - meta: end_play
      when:
        - not (auto_apply|default(false))
        - prompted is defined and prompted.user_input != 'yes'

    - set_fact:
        target_full_name: "{{ target_name }}-{{ target_region }}"

    - name: Clean hostfile for the layer
      file:
        state: absent
        path: "{{ playbook_dir }}/../../{{ target_name }}/inventories/hosts_{{ layer_name }}"

    - name: Clean Bastion hostfile in Nomad Cluster
      file:
        state: absent
        path: "{{ playbook_dir }}/../../../clusters-nomad/{{ target_name }}/inventories/hosts_parent_{{ layer_name }}"
      when: layer_name not in ['02-bastion']

    - name: terraform destroy
      shell: >-
        rm -rf {{ playbook_dir }}/../../terraform/{{ layer_name }}/.terraform
        &&
        terraform init
        -backend-config "bucket={{ target_full_name }}-tfstate"
        -backend-config "key={{ layer_name }}.{{ target_full_name }}.tfstate"
        -backend-config "region={{ target_region }}"
        -backend-config "dynamodb_table={{ target_full_name }}-tfstate-lock"
        -force-copy
        &&
        terraform destroy -force {{ tf_common_vars }}
      args:
        chdir: "{{ playbook_dir }}/../../terraform/{{ layer_name }}"
        warn: no
